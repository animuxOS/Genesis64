0.10:element-dv1394src
0.10:urisource-dv
0.10:element-aasink
0.10:element-alawenc
0.10:encoder-audio/x-alaw;
0.10:element-alawdec
0.10:decoder-audio/x-alaw;
0.10:element-alpha
0.10:element-alphacolor
0.10:element-cmmlenc
0.10:encoder-text/x-cmml, encoded=(boolean)true;
0.10:element-cmmldec
0.10:decoder-text/x-cmml, encoded=(boolean)true;
0.10:element-apedemux
0.10:decoder-application/x-apetag;
0.10:element-audiopanorama
0.10:element-audioinvert
0.10:element-audioamplify
0.10:element-audiodynamic
0.10:element-audiocheblimit
0.10:element-audiochebband
0.10:element-audiowsinclimit
0.10:element-audiowsincband
0.10:element-auparse
0.10:decoder-audio/x-au;
0.10:element-autovideosink
0.10:element-autoaudiosink
0.10:element-avidemux
0.10:decoder-video/x-msvideo;
0.10:element-avimux
0.10:encoder-video/x-msvideo;
0.10:element-avisubtitle
0.10:decoder-application/x-subtitle-avi;
0.10:element-cacasink
0.10:element-cairotextoverlay
0.10:element-cairotimeoverlay
0.10:element-cdiocddasrc
0.10:urisource-cdda
0.10:element-cutter
0.10:element-breakmydata
0.10:element-rndbuffersize
0.10:element-navseek
0.10:element-progressreport
0.10:element-testsink
0.10:element-dvdemux
0.10:decoder-video/x-dv, systemstream=(boolean)true;
0.10:element-dvdec
0.10:decoder-video/x-dv, systemstream=(boolean)false;
0.10:element-efence
0.10:element-edgetv
0.10:element-agingtv
0.10:element-dicetv
0.10:element-warptv
0.10:element-shagadelictv
0.10:element-vertigotv
0.10:element-revtv
0.10:element-quarktv
0.10:element-equalizer-nbands
0.10:element-equalizer-3bands
0.10:element-equalizer-10bands
0.10:element-flacenc
0.10:encoder-audio/x-flac;
0.10:element-flacdec
0.10:decoder-audio/x-flac;
0.10:element-flxdec
0.10:decoder-video/x-fli;
0.10:element-gamma
0.10:element-gconfvideosink
0.10:element-gconfvideosrc
0.10:element-gconfaudiosink
0.10:element-gconfaudiosrc
0.10:element-gdkpixbufdec
0.10:decoder-image/png;
0.10:decoder-image/gif;
0.10:decoder-image/x-icon;
0.10:decoder-application/x-navi-animation;
0.10:decoder-image/x-cmu-raster;
0.10:decoder-image/x-sun-raster;
0.10:decoder-image/x-pixmap;
0.10:decoder-image/tiff;
0.10:decoder-image/x-portable-anymap;
0.10:decoder-image/x-portable-bitmap;
0.10:decoder-image/x-portable-graymap;
0.10:decoder-image/x-portable-pixmap;
0.10:decoder-image/bmp;
0.10:decoder-image/x-bmp;
0.10:decoder-image/x-MS-bmp;
0.10:decoder-image/vnd.wap.wbmp;
0.10:decoder-image/x-bitmap;
0.10:decoder-image/x-tga;
0.10:decoder-image/x-pcx;
0.10:decoder-image/svg;
0.10:decoder-image/svg+xml;
0.10:element-gdkpixbufscale
0.10:element-goom
0.10:element-halaudiosink
0.10:element-halaudiosrc
0.10:element-icydemux
0.10:decoder-application/x-icy, metadata-interval=(int)[ 0, 2147483647 ];
0.10:element-id3demux
0.10:decoder-application/x-id3;
0.10:element-jpegenc
0.10:encoder-image/jpeg;
0.10:element-jpegdec
0.10:decoder-image/jpeg;
0.10:element-smokeenc
0.10:encoder-video/x-smoke;
0.10:element-smokedec
0.10:decoder-video/x-smoke;
0.10:element-level
0.10:element-matroskademux
0.10:decoder-video/x-matroska;
0.10:element-matroskamux
0.10:encoder-video/x-matroska;
0.10:element-monoscope
0.10:element-mulawenc
0.10:encoder-audio/x-mulaw;
0.10:element-mulawdec
0.10:decoder-audio/x-mulaw;
0.10:element-multifilesrc
0.10:element-multifilesink
0.10:element-multipartdemux
0.10:decoder-multipart/x-mixed-replace;
0.10:element-multipartmux
0.10:encoder-multipart/x-mixed-replace;
0.10:element-navigationtest
0.10:element-ossmixer
0.10:element-osssrc
0.10:element-osssink
0.10:element-pngdec
0.10:decoder-image/png;
0.10:element-pngenc
0.10:encoder-image/png;
0.10:element-qtdemux
0.10:decoder-video/quicktime;
0.10:decoder-audio/x-m4a;
0.10:decoder-application/x-3gp;
0.10:element-rtpxqtdepay
0.10:decoder-application/x-rtp, payload=(int)[ 96, 127 ], media=(string){ audio, video }, encoding-name=(string){ X-QT, X-QUICKTIME };
0.10:element-rtpdepay
0.10:decoder-application/x-rtp;
0.10:element-rtpac3depay
0.10:decoder-application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], encoding-name=(string)AC3;
0.10:element-rtpilbcpay
0.10:encoder-application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], encoding-name=(string)ILBC, mode=(string){ 20, 30 };
0.10:element-rtpilbcdepay
0.10:decoder-application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], encoding-name=(string)ILBC, mode=(string){ 20, 30 };
0.10:element-rtpgsmdepay
0.10:decoder-application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], encoding-name=(string)GSM;
0.10:decoder-application/x-rtp, media=(string)audio, payload=(int)3;
0.10:element-rtpgsmpay
0.10:encoder-application/x-rtp, media=(string)audio, payload=(int)3, encoding-name=(string)GSM;
0.10:encoder-application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], encoding-name=(string)GSM;
0.10:element-rtpamrdepay
0.10:decoder-application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], encoding-name=(string)AMR, encoding-params=(string)1, octet-align=(string)1, crc=(string){ 0, 1 }, robust-sorting=(string)0, interleaving=(string)0;
0.10:decoder-application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], encoding-name=(string)AMR-WB, encoding-params=(string)1, octet-align=(string)1, crc=(string){ 0, 1 }, robust-sorting=(string)0, interleaving=(string)0;
0.10:element-rtpamrpay
0.10:encoder-application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], encoding-name=(string)AMR, encoding-params=(string)1, octet-align=(string)1, crc=(string)0, robust-sorting=(string)0, interleaving=(string)0, mode-set=(int)[ 0, 7 ], mode-change-period=(int)[ 1, 2147483647 ], mode-change-neighbor=(string){ 0, 1 }, maxptime=(int)[ 20, 2147483647 ], ptime=(int)[ 20, 2147483647 ];
0.10:encoder-application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], encoding-name=(string)AMR-WB, encoding-params=(string)1, octet-align=(string)1, crc=(string)0, robust-sorting=(string)0, interleaving=(string)0, mode-set=(int)[ 0, 7 ], mode-change-period=(int)[ 1, 2147483647 ], mode-change-neighbor=(string){ 0, 1 }, maxptime=(int)[ 20, 2147483647 ], ptime=(int)[ 20, 2147483647 ];
0.10:element-rtppcmadepay
0.10:decoder-application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], encoding-name=(string)PCMA;
0.10:decoder-application/x-rtp, media=(string)audio, payload=(int)8;
0.10:element-rtppcmudepay
0.10:decoder-application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], encoding-name=(string)PCMU;
0.10:decoder-application/x-rtp, media=(string)audio, payload=(int)0;
0.10:element-rtppcmupay
0.10:encoder-application/x-rtp, media=(string)audio, payload=(int)0, encoding-name=(string)PCMU;
0.10:encoder-application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], encoding-name=(string)PCMU;
0.10:element-rtppcmapay
0.10:encoder-application/x-rtp, media=(string)audio, payload=(int)8, encoding-name=(string)PCMA;
0.10:encoder-application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], encoding-name=(string)PCMA;
0.10:element-rtpmpadepay
0.10:decoder-application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], encoding-name=(string)MPA;
0.10:decoder-application/x-rtp, media=(string)audio, payload=(int)14;
0.10:element-rtpmpapay
0.10:encoder-application/x-rtp, media=(string)audio, payload=(int)14;
0.10:encoder-application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], encoding-name=(string)MPA;
0.10:element-rtpmpvdepay
0.10:decoder-application/x-rtp, media=(string)video, payload=(int)[ 96, 127 ], encoding-name=(string)MPV;
0.10:decoder-application/x-rtp, media=(string)video, payload=(int)32;
0.10:element-rtpmpvpay
0.10:encoder-application/x-rtp, media=(string)video, payload=(int)32, encoding-name=(string)MPV;
0.10:element-rtph263ppay
0.10:encoder-application/x-rtp, media=(string)video, payload=(int)[ 96, 127 ], encoding-name=(string)H263-1998;
0.10:encoder-application/x-rtp, media=(string)video, payload=(int)[ 96, 127 ], encoding-name=(string)H263-2000;
0.10:element-rtph263pdepay
0.10:decoder-application/x-rtp, media=(string)video, payload=(int)[ 96, 127 ], encoding-name=(string)H263-1998;
0.10:decoder-application/x-rtp, media=(string)video, payload=(int)[ 96, 127 ], encoding-name=(string)H263-2000;
0.10:element-rtph263depay
0.10:decoder-application/x-rtp, media=(string)video, payload=(int)34, encoding-name=(string)H263;
0.10:decoder-application/x-rtp, media=(string)video, payload=(int)[ 96, 127 ], encoding-name=(string)H263;
0.10:element-rtph263pay
0.10:encoder-application/x-rtp, media=(string)video, payload=(int)34, encoding-name=(string)H263;
0.10:encoder-application/x-rtp, media=(string)video, payload=(int)[ 96, 127 ], encoding-name=(string)H263;
0.10:element-rtph264depay
0.10:decoder-application/x-rtp, media=(string)video, payload=(int)[ 96, 127 ], encoding-name=(string)H264;
0.10:element-rtph264pay
0.10:encoder-application/x-rtp, media=(string)video, payload=(int)[ 96, 127 ], encoding-name=(string)H264;
0.10:element-rtpL16pay
0.10:encoder-application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], encoding-name=(string)L16;
0.10:encoder-application/x-rtp, media=(string)audio, payload=(int){ 10, 11 };
0.10:element-rtpL16depay
0.10:decoder-application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], encoding-name=(string)L16;
0.10:decoder-application/x-rtp, media=(string)audio, payload=(int){ 10, 11 };
0.10:element-asteriskh263
0.10:decoder-application/x-rtp, media=(string)video, payload=(int)[ 96, 127 ], encoding-name=(string)H263-1998;
0.10:element-rtpmp2tdepay
0.10:decoder-application/x-rtp, media=(string)video, payload=(int)[ 96, 127 ], encoding-name=(string)MP2T-ES;
0.10:decoder-application/x-rtp, media=(string)video, payload=(int)33;
0.10:element-rtpmp2tpay
0.10:encoder-application/x-rtp, media=(string)video, payload=(int)[ 96, 127 ], encoding-name=(string)MP2T-ES;
0.10:element-rtpmp4vpay
0.10:encoder-application/x-rtp, media=(string)video, payload=(int)[ 96, 127 ], encoding-name=(string)MP4V-ES;
0.10:element-rtpmp4vdepay
0.10:decoder-application/x-rtp, media=(string)video, payload=(int)[ 96, 127 ], encoding-name=(string)MP4V-ES;
0.10:element-rtpmp4adepay
0.10:decoder-application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], encoding-name=(string)MP4A-LATM;
0.10:element-rtpmp4gdepay
0.10:decoder-application/x-rtp, media=(string){ video, audio, application }, payload=(int)[ 96, 127 ], encoding-name=(string)MPEG4-GENERIC, streamtype=(string){ 4, 5 }, mode=(string){ generic, CELP-cbr, CELP-vbr, AAC-lbr, AAC-hbr };
0.10:element-rtpmp4gpay
0.10:encoder-application/x-rtp, media=(string){ video, audio, application }, payload=(int)[ 96, 127 ], encoding-name=(string)MPEG4-GENERIC, streamtype=(string){ 4, 5 }, mode=(string){ generic, CELP-cbr, CELP-vbr, AAC-lbr, AAC-hbr };
0.10:element-rtpspeexpay
0.10:encoder-application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], encoding-name=(string)SPEEX, encoding-params=(string)1;
0.10:element-rtpspeexdepay
0.10:decoder-application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], encoding-name=(string)SPEEX, encoding-params=(string)1;
0.10:element-rtpsv3vdepay
0.10:decoder-application/x-rtp, media=(string)video, payload=(int)[ 96, 127 ], encoding-name=(string){ X-SV3V-ES, X-SORENSON-VIDEO };
0.10:element-rtptheoradepay
0.10:decoder-application/x-rtp, media=(string)video, payload=(int)[ 96, 127 ], encoding-name=(string)THEORA;
0.10:element-rtptheorapay
0.10:encoder-application/x-rtp, media=(string)video, payload=(int)[ 96, 127 ], encoding-name=(string)THEORA;
0.10:element-rtpvorbisdepay
0.10:decoder-application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], encoding-name=(string)VORBIS;
0.10:element-rtpvorbispay
0.10:encoder-application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], encoding-name=(string)VORBIS;
0.10:element-rtspsrc
0.10:urisource-rtsp
0.10:urisource-rtspu
0.10:urisource-rtspt
0.10:element-rtpdec
0.10:decoder-application/x-rtp;
0.10:element-shout2send
0.10:element-smpte
0.10:element-spectrum
0.10:element-speexenc
0.10:encoder-audio/x-speex;
0.10:element-speexdec
0.10:decoder-audio/x-speex;
0.10:element-id3v2mux
0.10:element-apev2mux
0.10:element-udpsink
0.10:urisink-udp
0.10:element-multiudpsink
0.10:element-dynudpsink
0.10:element-udpsrc
0.10:urisource-udp
0.10:element-v4l2src
0.10:element-videobalance
0.10:element-videobox
0.10:element-videocrop
0.10:element-videoflip
0.10:element-videomixer
0.10:element-wavenc
0.10:encoder-audio/x-wav;
0.10:element-wavpackparse
0.10:decoder-audio/x-wavpack, framed=(boolean)false;
0.10:decoder-audio/x-wavpack-correction, framed=(boolean)false;
0.10:element-wavpackdec
0.10:decoder-audio/x-wavpack, framed=(boolean)true;
0.10:element-wavpackenc
0.10:encoder-audio/x-wavpack, framed=(boolean)true;
0.10:element-wavparse
0.10:decoder-audio/x-wav;
0.10:element-ximagesrc
